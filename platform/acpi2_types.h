#ifndef _ACPI2_TYPES_H_
#define _ACPI2_TYPES_H_

#include "platform_types.h"

typedef struct _FIXED_ACPI_DESCRIPTION_TABLE
{
    SYSTEM_DESCRIPTION_TABLE_HEADER Header;
    UINT32 FIRMWARE_CTRL;
    UINT32 DSDT;
    UINT8 Reserved1;
    UINT8 Preferred_PM_Profile;
    UINT16 SCI_INT;
    UINT32 SMI_CMD;
    UINT8 ACPI_ENABLE;
    UINT8 ACPI_DISABLE;
    UINT8 S4BIOS_REQ;
    UINT8 PSTATE_CNT;
    UINT32 PM1a_EVT_BLK;
    UINT32 PM1b_EVT_BLK;
    UINT32 PM1a_CNT_BLK;
    UINT32 PM1b_CNT_BLK;
    UINT32 PM2_CNT_BLK;
    UINT32 PM_TMR_BLK;
    UINT32 GPE0_BLK;
    UINT32 GPE1_BLK;
    UINT8 PM1_EVT_LEN;
    UINT8 PM1_CNT_LEN;
    UINT8 PM2_CNT_LEN;
    UINT8 PM_TMR_LEN;
    UINT8 GPE0_BLK_LEN;
    UINT8 GPE1_BLK_LEN;
    UINT8 GPE1_BASE;
    UINT8 CST_CNT;
    UINT16 P_LVL2_LAT;
    UINT16 P_LVL3_LAT;
    UINT16 FLUSH_SIZE;
    UINT16 FLUSH_STRIDE;
    UINT8 DUTY_OFFSET;
    UINT8 DUTY_WIDTH;
    UINT8 DAY_ALRM;
    UINT8 MON_ALRM;
    UINT8 CENTURY;
    UINT16 IAPC_BOOT_ARCH;
    UINT8 Reseved;
    UINT32 Flags;
    UINT8 RESET_REG[12];
    UINT8 RESET_VALUE;
    UINT16 ARM_BOOT_ARCH;
    UINT8 MinorVersion;
    UINT64 X_FIRMWARE_CTRL;
    UINT64 X_DSDT;
    UINT8 X_PM1a_EVT_BLK[12];
    UINT8 X_PM1b_EVT_BLK[12];
    UINT8 X_PM1a_CNT_BLK[12];
    UINT8 X_PM1b_CNT_BLK[12];
    UINT8 X_PM2_CNT_BLK[12];
    UINT8 X_PM_TMR_BLK[12];
    UINT8 X_GPE0_BLK[12];
    UINT8 X_GPE1_BLK[12];
    UINT8 SLEEP_CONTROL_REG[12];
    UINT8 SLEEP_STATUS_REG[12];
    UINT64 HypervisorVendorIdentity;
} PACKED FIXED_ACPI_DESCRIPTION_TABLE;


#endif /* _ACPI2_TYPES_H_ */
